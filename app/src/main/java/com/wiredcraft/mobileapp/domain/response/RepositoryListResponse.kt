package com.wiredcraft.mobileapp.domain.response

import com.google.gson.annotations.SerializedName

data class RepositoryListResponse(
    @SerializedName("allow_forking") val allowForking: Boolean,
    @SerializedName("stargazers_count") val stargazersCount: Long,
    @SerializedName("is_template") val isTemplate: Boolean,
    @SerializedName("pushed_at") val pushedAt: String,
    @SerializedName("subscribers_url") val subscriptionURL: String,
    @SerializedName("language") val language: String,
    @SerializedName("branches_url") val branchesURL: String,
    @SerializedName("issue_comment_url") val issueCommentURL: String,
    @SerializedName("labels_url") val labelsURL: String,
    @SerializedName("releases_url") val releasesURL: String,
    @SerializedName("svn_url") val svnURL: String,
    @SerializedName("id") val id: Long,
    @SerializedName("has_discussions") val hasDiscussions: Boolean,
    @SerializedName("forks") val forks: Long,
    @SerializedName("archive_url") val archiveURL: String,
    @SerializedName("git_refs_url") val gitRefsURL: String,
    @SerializedName("forks_url") val forksURL: String,
    @SerializedName("visibility") val visibility: String,
    @SerializedName("statuses_url") val statusesURL: String,
    @SerializedName("ssh_url") val sshURL: String,
    @SerializedName("full_name") val fullName: String,
    @SerializedName("size") val size: Long,
    @SerializedName("languages_url") val languagesURL: String,
    @SerializedName("html_url") val htmlURL: String,
    @SerializedName("collaborators_url") val collaboratorsURL: String,
    @SerializedName("clone_url") val cloneURL: String,
    @SerializedName("name") val name: String,
    @SerializedName("pulls_url") val pullsURL: String,
    @SerializedName("default_branch") val defaultBranch: String,
    @SerializedName("hooks_url") val hooksURL: String,
    @SerializedName("trees_url") val treesURL: String,
    @SerializedName("tags_url") val tagsURL: String,
    @SerializedName("private") val private: Boolean,
    @SerializedName("contributors_url") val contributorsURL: String,
    @SerializedName("has_downloads") val hasDownloads: Boolean,
    @SerializedName("notifications_url") val notificationsURL: String,
    @SerializedName("open_issues_count") val openIssuesCount: Long,
    @SerializedName("description") val description: String,
    @SerializedName("created_at") val createdAt: String,
    @SerializedName("watchers") val watchers: Long,
    @SerializedName("keys_url") val keysURL: String,
    @SerializedName("deployments_url") val deploymentsURL: String,
    @SerializedName("has_projects") val hasProjects: Boolean,
    @SerializedName("archived") val archived: Boolean,
    @SerializedName("has_wiki") val hasWiki: Boolean,
    @SerializedName("updated_at") val updatedAt: String,
    @SerializedName("comments_url") val commentsURL: String,
    @SerializedName("stargazers_url") val stargazersURL: String,
    @SerializedName("disabled") val disabled: Boolean,
    @SerializedName("git_url") val gitURL: String,
    @SerializedName("has_pages") val hasPages: Boolean,
    @SerializedName("owner") val owner: Owner?,
    @SerializedName("commits_url") val commitsURL: String,
    @SerializedName("compare_url") val compareURL: String,
    @SerializedName("gitCommits_url") val gitCommitsURL: String,
    @SerializedName("topics") val topics: List<Any?>,
    @SerializedName("blobs_url") val blobsURL: String,
    @SerializedName("gitTags_url") val gitTagsURL: String,
    @SerializedName("merges_url") val mergesURL: String,
    @SerializedName("downloads_url") val downloadsURL: String,
    @SerializedName("has_issues") val hasIssues: Boolean,
    @SerializedName("web_commit_signoff_required") val webCommitSignoffRequired: Boolean,
    @SerializedName("url") val url: String,
    @SerializedName("contents_url") val contentsURL: String,
    @SerializedName("milestones_url") val milestonesURL: String,
    @SerializedName("teams_url") val teamsURL: String,
    @SerializedName("fork") val fork: Boolean,
    @SerializedName("issues_url") val issuesURL: String,
    @SerializedName("events_url") val eventsURL: String,
    @SerializedName("issue_events_url") val issueEventsURL: String,
    @SerializedName("assignees_url") val assigneesURL: String,
    @SerializedName("open_issues") val openIssues: Long,
    @SerializedName("watchers_count") val watchersCount: Long,
    @SerializedName("node_id") val nodeID: String,
    @SerializedName("forks_count") val forksCount: Long
)

data class Owner(
    @SerializedName("gists_url") val gistsURL: String,
    @SerializedName("repos_url") val reposURL: String,
    @SerializedName("following_url") val followingURL: String,
    @SerializedName("starred_url") val starredURL: String,
    @SerializedName("login") val login: String,
    @SerializedName("followers_url") val followersURL: String,
    @SerializedName("type") val type: String,
    @SerializedName("url") val url: String,
    @SerializedName("subscriptions_url") val subscriptionsURL: String,
    @SerializedName("receivedEvents_url") val receivedEventsURL: String,
    @SerializedName("avatar_url") val avatarURL: String,
    @SerializedName("events_url") val eventsURL: String,
    @SerializedName("html_url") val htmlURL: String,
    @SerializedName("site_admin") val siteAdmin: Boolean,
    @SerializedName("id") val id: Long,
    @SerializedName("gravatar_id") val gravatarID: String,
    @SerializedName("node_id") val nodeID: String,
    @SerializedName("organizations_url") val organizationsURL: String
)
